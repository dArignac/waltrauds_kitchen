rules_version = '2';
service cloud.firestore {

    // general authentication
    function isAnyLoggedInUser() {
        return request.auth != null
            && request.auth.token.email_verified;
    }

    function isSpecificLoggedInUser(userId) {
        return isAnyLoggedInUser()
            && userId == request.auth.uid;
    }

    // users
    function userDisplayNameIsValid() {
        return request.resource.data.displayName is string
            && request.resource.data.displayName.size() > 0;
    }

    function userPhotoUrlIsValid() {
        return request.resource.data.photoURL is string
            && request.resource.data.photoURL.size() > 0;
    }

    // matches
    match /databases/{database}/documents {
        function isRegisteredUser() {
            return isAnyLoggedInUser()
                && exists(/databases/$(database)/documents/users/$(request.auth.uid));
        }

        function isValidCommunity() {
            return request.resource.data.name is string
                && request.resource.data.name.size() > 0;
        }

        function isValidCommunityPrivateData() {
            return request.resource.data.roles is map
                && request.resource.data.roles.size() > 0;
        }

        function isValidCommunityPrivateDataOnCreation() {
            return request.resource.data.roles.size() == 1
                && request.resource.data.roles[request.auth.uid] == "owner";
        }

        match /users/{userId} {
            allow read: if isSpecificLoggedInUser(userId);
            allow create: if isSpecificLoggedInUser(userId)
                && userDisplayNameIsValid()
                && userPhotoUrlIsValid();
            allow update: if isRegisteredUser()
                && userDisplayNameIsValid()
                && userPhotoUrlIsValid();
        }

        match /communities/{communityId} {
            allow read: if isRegisteredUser(); // FIXME is this good enough?
            allow create: if isRegisteredUser()
                && isValidCommunity();
            // FIXME to be defined
            //allow update: if get(/databases/$(database)/documents/communities/$(communityId)/private_data/private).data.roles[request.auth.uid] in ["owner"];
        }

        match /communities/{communityId}/private_data/private {
            allow read: if isRegisteredUser(); // FIXME validate
            allow create: if isRegisteredUser()
                && isValidCommunityPrivateData()
                && isValidCommunityPrivateDataOnCreation();
        }
    }
}